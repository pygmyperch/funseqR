% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/descriptive_functions.R
\name{generate_candidate_loci_profile}
\alias{generate_candidate_loci_profile}
\title{Generate comprehensive candidate loci functional profile}
\usage{
generate_candidate_loci_profile(
  con,
  candidate_loci,
  background_file_id = NULL,
  blast_param_id = NULL,
  include_statistics = TRUE,
  include_modules = TRUE,
  output_format = "both",
  verbose = TRUE
)
}
\arguments{
\item{con}{Database connection object}

\item{candidate_loci}{Data frame with chromosome and position columns, or file_id of candidate VCF.}

\item{background_file_id}{Integer. File ID of background dataset for comparison. If NULL, auto-detects.}

\item{blast_param_id}{Integer. Specific BLAST parameter set to analyze. If NULL, analyzes all.}

\item{include_statistics}{Logical. Include statistical comparisons with background. Default is TRUE.}

\item{include_modules}{Logical. Include functional module analysis. Default is TRUE.}

\item{output_format}{Character. Format for results: "list", "tables", or "both". Default is "both".}

\item{verbose}{Logical. Print progress information. Default is TRUE.}
}
\value{
List containing comprehensive candidate loci profile:
\itemize{
\item summary: Overview statistics and coverage metrics
\item functional_modules: Integrated functional module analysis
\item go_profile: GO term analysis specific to candidates
\item kegg_profile: KEGG pathway analysis specific to candidates
\item protein_profile: UniProt annotation analysis specific to candidates
\item background_comparison: Statistical comparison with background (if include_statistics = TRUE)
\item summary_tables: Publication-ready summary tables (if output_format includes "tables")
}
}
\description{
Creates a detailed functional characterization of candidate loci including
GO terms, KEGG pathways, protein annotations, and statistical comparisons
with background datasets.
}
\examples{
\dontrun{
con <- connect_funseq_db("analysis.db")

# Profile specific candidate loci
candidates <- data.frame(
  chromosome = c("LG1", "LG2", "LG1"),
  position = c(12345, 67890, 23456)
)
profile <- generate_candidate_loci_profile(con, candidate_loci = candidates)

# Profile using candidate VCF file ID
profile <- generate_candidate_loci_profile(con, candidate_loci = 5)

print(profile$summary)
print(profile$functional_modules$integrated_summary)

close_funseq_db(con)
}

}
