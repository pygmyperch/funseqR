% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/descriptive_functions.R
\name{create_functional_comparison_tables}
\alias{create_functional_comparison_tables}
\title{Create functional comparison tables between datasets}
\usage{
create_functional_comparison_tables(
  con,
  dataset_list,
  blast_param_id = NULL,
  comparison_metrics = c("coverage", "diversity", "top_terms"),
  max_terms = 10,
  include_statistics = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{con}{Database connection object}

\item{dataset_list}{List. Named list of datasets, where each element is either:
\itemize{
\item Data frame with chromosome/position columns
\item Numeric file_id
\item NULL for all loci
}}

\item{blast_param_id}{Integer. Specific BLAST parameter set to analyze. If NULL, analyzes all.}

\item{comparison_metrics}{Character vector. Metrics to compare: c("coverage", "diversity", "modules", "top_terms").}

\item{max_terms}{Integer. Maximum number of top terms to show per dataset. Default is 10.}

\item{include_statistics}{Logical. Include statistical significance tests. Default is TRUE.}

\item{verbose}{Logical. Print progress information. Default is TRUE.}
}
\value{
List containing comparison tables:
\itemize{
\item overview_comparison: Side-by-side overview statistics
\item coverage_comparison: Annotation coverage comparison
\item diversity_comparison: Functional diversity metrics comparison
\item top_terms_comparison: Most frequent terms per dataset
\item module_comparison: Functional module representation comparison (if "modules" in comparison_metrics)
\item statistical_tests: Statistical significance tests (if include_statistics = TRUE)
}
}
\description{
Generates publication-ready comparison tables showing functional differences
between multiple datasets (e.g., candidate vs background, or multiple candidate sets).
}
\examples{
\dontrun{
con <- connect_funseq_db("analysis.db")

# Compare candidate vs background
datasets <- list(
  "Candidates" = data.frame(chromosome = c("LG1", "LG2"), position = c(12345, 67890)),
  "Background" = NULL  # All loci
)
comparison <- create_functional_comparison_tables(con, datasets)
print(comparison$overview_comparison)

# Compare multiple candidate sets
datasets <- list(
  "Adaptive_Set1" = 5,   # file_id
  "Adaptive_Set2" = 6,   # file_id
  "Neutral" = NULL       # All loci
)
comparison <- create_functional_comparison_tables(con, datasets)

close_funseq_db(con)
}

}
