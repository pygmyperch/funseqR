% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/go_workflow.R
\name{run_ORA}
\alias{run_ORA}
\title{GO Enrichment Workflow Functions}
\usage{
run_ORA(
  con,
  candidate_vcf_file,
  background_file_id = NULL,
  blast_param_id = NULL,
  annotation_type = c("both", "GO", "KEGG"),
  ontologies = c("BP", "MF", "CC"),
  min_genes = 5,
  max_genes = 500,
  significance_threshold = 0.05,
  method = "clusterprofiler",
  store_results = TRUE,
  create_plots = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{con}{Database connection object}

\item{candidate_vcf_file}{Character. Path to candidate VCF file}

\item{background_file_id}{Integer. File ID of background dataset (or NULL to auto-detect)}

\item{blast_param_id}{Integer. Optional. Specific BLAST run ID to use for both datasets.
If NULL, uses all available annotations. Default is NULL.}

\item{annotation_type}{Character. Type of annotations to analyze: "GO", "KEGG", or "both". Default is "both"}

\item{ontologies}{Character vector. GO ontologies to test: c("BP", "MF", "CC"). Only used when GO is included. Default is c("BP", "MF", "CC")}

\item{min_genes}{Integer. Minimum genes for term/pathway testing. Default is 5}

\item{max_genes}{Integer. Maximum genes for term/pathway testing. Default is 500}

\item{significance_threshold}{Numeric. FDR threshold for significance. Default is 0.05}

\item{method}{Character. Enrichment method: "clusterprofiler" or "legacy". Default is "clusterprofiler"}

\item{store_results}{Logical. Store results in database. Default is TRUE}

\item{create_plots}{Logical. Generate visualization plots. Default is TRUE}

\item{verbose}{Logical. Print progress information. Default is TRUE}
}
\value{
List containing all analysis results, plots, and summary tables
}
\description{
High-level wrapper functions for complete GO enrichment workflows
}
\details{
Over-Representation Analysis (ORA) workflow for GO and KEGG enrichment

This function performs complete Over-Representation Analysis (ORA) workflow:
\enumerate{
\item Import candidate loci file
\item Link to existing annotations
\item Extract annotations for both datasets (optionally filtered by BLAST run)
\item Perform enrichment testing using clusterProfiler:
\itemize{
\item GO: Tests specified ontologies (BP, MF, CC)
\item KEGG: Tests pathway enrichment
\item both: Runs both GO and KEGG analyses
}
\item Create visualizations
\item Store results in unified database schema
}

When blast_param_id is specified, only annotations from that specific BLAST run
are used for both candidate and background datasets, ensuring methodological
consistency and enabling comparison of different annotation strategies.
}
\examples{
\dontrun{
con <- connect_funseq_db("analysis.db")

# Run both GO and KEGG enrichment (default)
results <- run_ORA(con, "candidates.vcf")

# Run only GO enrichment
go_results <- run_ORA(con, "candidates.vcf", annotation_type = "GO")

# Run only KEGG enrichment
kegg_results <- run_ORA(con, "candidates.vcf", annotation_type = "KEGG")

# Use custom significance threshold
results_lenient <- run_ORA(con, "candidates.vcf", significance_threshold = 0.1)

# Use only ORF-based annotations for both GO and KEGG
results_orf <- run_ORA(con, "candidates.vcf", blast_param_id = 1)

print(results$summary)
print(results$plots$GO_BP_bubble)
print(results$plots$KEGG_pathway_bubble)
}

}
