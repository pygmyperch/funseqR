% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functional_visualization.R, R/manhattan_plots.R
\name{create_functional_manhattan_plot}
\alias{create_functional_manhattan_plot}
\title{Create functional Manhattan plot}
\usage{
create_functional_manhattan_plot(
  con,
  y_values,
  vcf_file_id,
  functional_summary,
  y_label = "Statistical Value",
  plot_title = "Functional Manhattan Plot",
  signif_threshold = 0.01,
  transform_y = "neg_log10",
  highlight_color = "#D0DBEE",
  chr_colors = c("#A1B1CC", "#0E7EC0"),
  point_size = 1.2,
  label_top_hits = 10,
  verbose = TRUE
)

create_functional_manhattan_plot(
  con,
  y_values,
  vcf_file_id,
  functional_summary,
  y_label = "Statistical Value",
  plot_title = "Functional Manhattan Plot",
  signif_threshold = 0.01,
  transform_y = "neg_log10",
  highlight_color = "#D0DBEE",
  chr_colors = c("#A1B1CC", "#0E7EC0"),
  point_size = 1.2,
  label_top_hits = 10,
  verbose = TRUE
)
}
\arguments{
\item{con}{Database connection object}

\item{y_values}{Numeric vector of values to plot on y-axis (same order as VCF file variants)}

\item{vcf_file_id}{Integer. File ID of the VCF file used in the analysis}

\item{functional_summary}{List. Output from summarize_functional_loci() containing loci_summary}

\item{y_label}{Character. Label for y-axis. Default is "Statistical Value"}

\item{plot_title}{Character. Title for the plot. Default is "Functional Manhattan Plot"}

\item{signif_threshold}{Numeric. Significance threshold line to draw. Default is 0.01}

\item{transform_y}{Character. Transform y-values: "none", "neg_log10", or "log10". Default is "neg_log10"}

\item{highlight_color}{Character. Color for functionally enriched points. Default is "#D0DBEE"}

\item{chr_colors}{Character vector. Two colors for alternating chromosomes. Default is snapper colors}

\item{point_size}{Numeric. Size of points. Default is 1.2}

\item{label_top_hits}{Integer. Number of top hits to label. Default is 10}

\item{verbose}{Logical. Print progress information. Default is TRUE}

\item{enrichment_results}{Data frame or list of GO enrichment results}

\item{candidate_file_id}{Integer. File ID of candidate dataset}

\item{gea_results}{Data frame with GEA results containing chromosome, position, and metric columns}

\item{y_metric}{Character. Column name in gea_results to use for y-axis. Default is "p_value"}

\item{y_transform}{Character. Transformation for y-axis: "-log10", "log10", "identity", etc. Default is "-log10"}

\item{significance_threshold}{Numeric. FDR threshold for enrichment significance. Default is 0.05}

\item{label_terms}{Character. Which terms to label: "significant", "top", or "none". Default is "significant"}

\item{max_labels}{Integer. Maximum number of labels to show. Default is 20}

\item{consolidate_scaffolds}{Logical. Use consolidated chromosome names. Default is TRUE}

\item{color_by}{Character. Color points by: "go_category", "fold_enrichment", or "significance". Default is "go_category"}

\item{point_size_by}{Character. Size points by: "fold_enrichment", "significance", or NULL. Default is "fold_enrichment"}

\item{position_tolerance}{Integer. Tolerance for matching genomic positions (bp). Default is 0}

\item{title}{Character. Plot title. Default is auto-generated}

\item{theme_function}{Function. ggplot2 theme function. Default is theme_minimal}
}
\value{
ggplot object

ggplot2 object
}
\description{
Create a Manhattan plot that displays genomic positions colored and labeled by
functional enrichment results, with user-provided GEA statistics on the y-axis.
This visualization links functional predictions back to genomic evidence.

Functions to create Manhattan plots for genome-wide association and environmental association studies,
with functional annotation highlighting from GO enrichment results.
Create functional Manhattan plot with enrichment annotation
}
\details{
This function creates a Manhattan plot that combines genomic positions (x-axis)
with user-provided GEA statistics (y-axis), while highlighting and labeling
points based on functional enrichment results. This enables visual validation
that functionally enriched loci are also those with strong environmental
associations.

The function automatically handles:
\itemize{
\item Chromosome consolidation for clean visualization
\item Intelligent label placement to avoid overcrowding
\item Color coding by functional categories or enrichment strength
\item Point sizing by enrichment metrics
\item Flexible y-axis transformations
}

Creates a Manhattan plot showing statistical values (p-values, q-values, etc.) across the genome
with highlighted points corresponding to functionally enriched loci from GO analysis.

This function creates a Manhattan plot in the style of the provided example, with:
\itemize{
\item Alternating chromosome colors for easy visualization
\item Highlighted points for functionally enriched loci
\item Optional significance threshold line
\item Labels for top significant hits
\item Proper handling of unmapped contigs
}

The function matches the y_values vector (in VCF order) with genomic coordinates
from the database and highlights any positions that appear in the functional
summary from GO enrichment analysis.
}
\examples{
\dontrun{
# Basic functional Manhattan plot
con <- connect_funseq_db("analysis.db")
enrich_res <- run_go_enrichment_workflow(con, "candidates.vcf")

# Prepare GEA results data frame
gea_data <- data.frame(
  chromosome = c("1", "1", "2", "3"),
  position = c(1000000, 2000000, 1500000, 800000),
  p_value = c(0.001, 0.0001, 0.005, 0.05)
)

# Create Manhattan plot
manhattan_plot <- create_functional_manhattan_plot(
  con, enrich_res$enrichment_results, enrich_res$candidate_import$file_id,
  gea_data, y_metric = "p_value"
)

print(manhattan_plot)

# Customize visualization
custom_plot <- create_functional_manhattan_plot(
  con, enrich_res$enrichment_results, enrich_res$candidate_import$file_id,
  gea_data,
  y_metric = "p_value",
  color_by = "fold_enrichment",
  point_size_by = "significance",
  max_labels = 10,
  title = "Environmental Association vs Functional Enrichment"
)
}

\dontrun{
con <- connect_funseq_db("analysis.db")

# Get functional summary from enrichment analysis
enrich_summary <- summarize_functional_loci(con, 
                                          enrichment_results, 
                                          candidate_file_id,
                                          blast_param_id = 1)

# Create Manhattan plot with RDA q-values
manhattan_plot <- create_functional_manhattan_plot(
  con, 
  y_values = rda.simple.pq$q.values,
  vcf_file_id = 1,
  functional_summary = enrich_summary,
  y_label = "RDA q-value",
  plot_title = "RDA Analysis with Functional Annotation",
  signif_threshold = 0.01
)
print(manhattan_plot)
}

}
