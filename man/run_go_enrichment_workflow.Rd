% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/go_workflow.R
\name{run_go_enrichment_workflow}
\alias{run_go_enrichment_workflow}
\title{GO Enrichment Workflow Functions}
\usage{
run_go_enrichment_workflow(
  con,
  project_id,
  candidate_vcf_file,
  background_file_id = NULL,
  ontologies = c("BP", "MF"),
  min_genes = 5,
  max_genes = 500,
  store_results = TRUE,
  create_plots = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{con}{Database connection object}

\item{project_id}{Integer. Project ID}

\item{candidate_vcf_file}{Character. Path to candidate VCF file}

\item{background_file_id}{Integer. File ID of background dataset (or NULL to auto-detect)}

\item{ontologies}{Character vector. GO ontologies to test: c("BP", "MF", "CC"). Default is c("BP", "MF")}

\item{min_genes}{Integer. Minimum genes for GO term testing. Default is 5}

\item{max_genes}{Integer. Maximum genes for GO term testing. Default is 500}

\item{store_results}{Logical. Store results in database. Default is TRUE}

\item{create_plots}{Logical. Generate visualization plots. Default is TRUE}

\item{verbose}{Logical. Print progress information. Default is TRUE}
}
\value{
List containing all analysis results, plots, and summary tables
}
\description{
High-level wrapper functions for complete GO enrichment workflows
}
\details{
Complete GO enrichment analysis workflow

This function performs a complete GO enrichment workflow:
\enumerate{
\item Import candidate loci file
\item Link to existing annotations
\item Extract GO terms for both datasets
\item Perform enrichment testing for specified ontologies
\item Create visualizations
\item Store results in database (optional)
}
}
\examples{
\dontrun{
con <- connect_funseq_db("analysis.db")
results <- run_go_enrichment_workflow(con, 1, "candidates.vcf")
print(results$summary)
print(results$plots$BP_bubble)
}

}
