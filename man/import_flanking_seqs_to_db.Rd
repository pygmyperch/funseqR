% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_sequence.R
\name{import_flanking_seqs_to_db}
\alias{import_flanking_seqs_to_db}
\title{Import flanking sequences into the database}
\usage{
import_flanking_seqs_to_db(
  con,
  vcf_file_id,
  genome_id,
  flank_size = 500,
  translate_flanks = FALSE,
  orf_min_aa = 30,
  orf_return = "nuc",
  keep_raw_sequence = TRUE,
  chromosome = NULL,
  verbose = TRUE
)
}
\arguments{
\item{con}{A database connection object.}

\item{vcf_file_id}{The ID of the input file containing the VCF data.}

\item{genome_id}{The ID of the reference genome to use.}

\item{flank_size}{The size of the flanking region to extract on each side of the SNP. Default is 500.}

\item{translate_flanks}{Logical. If TRUE, extract ORFs from flanking sequences. Default is FALSE.}

\item{orf_min_aa}{Minimum ORF length in amino acids. Default is 30.}

\item{orf_return}{Type of ORF to return: "nuc" for nucleotide, "aa" for amino acid. Default is "nuc".}

\item{keep_raw_sequence}{Logical. If TRUE, store both raw and ORF sequences. Default is TRUE.}

\item{chromosome}{Optional. Limit extraction to specific chromosome(s). Can be a single chromosome name or a vector of chromosome names. Default is NULL (all chromosomes).}

\item{verbose}{Logical. If TRUE, print progress information. Default is TRUE.}
}
\value{
A list containing:
\item{vcf_count}{The number of VCF entries processed.}
\item{flanking_count}{The number of flanking sequences extracted.}
\item{orf_count}{The number of ORF sequences extracted (if translate_flanks = TRUE).}
}
\description{
This function extracts flanking sequences for VCF data in the database and stores them.
It can optionally extract ORFs from the flanking sequences for more targeted searches.
}
