% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_reports.R
\name{refresh_analysis_report}
\alias{refresh_analysis_report}
\title{Refresh Analysis Report}
\usage{
refresh_analysis_report(con, project_id, render_html = FALSE, open_html = TRUE)
}
\arguments{
\item{con}{A database connection object created with connect_funseq_db()}

\item{project_id}{Integer. The project ID whose report should be refreshed}

\item{render_html}{Logical. If TRUE, render the report to HTML format after updating.
Default is FALSE. Requires rmarkdown (for .Rmd) or quarto (for .Qmd) packages}

\item{open_html}{Logical. If TRUE and render_html=TRUE, automatically open the
rendered HTML file in the default web browser. Default is TRUE}

\item{verbose}{Logical. Print progress information. Default is TRUE}
}
\value{
Invisibly returns the path to the report file (character) or NULL if no report exists
}
\description{
Updates an existing analysis report with current database status and optionally
renders it to HTML. This function is useful for getting an up-to-date view of
your analysis progress, especially when run interactively.
}
\details{
This function performs several actions:
\itemize{
\item Adds a new "Manual Refresh" section to the report with current timestamp
\item Updates all dynamic content (table counts, project summaries, etc.)
\item Optionally renders the updated report to HTML for easy viewing
\item Can automatically open the HTML version in your web browser
}

The function will fail gracefully if no report exists for the specified project,
suggesting the user create one with \code{create_analysis_report()}.
}
\section{Rendering Requirements}{

To use \code{render_html = TRUE}, you need:
\itemize{
\item For .Rmd files: \code{rmarkdown} package installed
\item For .Qmd files: \code{quarto} package and Quarto CLI installed
\item All packages used in the report (funseqR, DBI, ggplot2, knitr, etc.)
}
}

\section{Common Use Cases}{

\itemize{
\item \strong{Progress Monitoring:} Run periodically during long analyses
\item \strong{Presentation Prep:} Render to HTML before meetings/presentations
\item \strong{Checkpoint Documentation:} Create timestamped snapshots of progress
\item \strong{Troubleshooting:} Get current status when debugging issues
}
}

\examples{
\dontrun{
# Connect to database
con <- connect_funseq_db("my_analysis.db")
project_id <- 1

# Simple refresh - just update the report content
refresh_analysis_report(con, project_id)
# Adds new section: "2025-05-22 16:23:45 - Manual Refresh"

# Refresh and render to HTML for presentation
refresh_analysis_report(con, project_id, render_html = TRUE)
# Updates report AND creates HTML file, opens in browser

# Refresh and render but don't auto-open browser
refresh_analysis_report(
  con, project_id, 
  render_html = TRUE, 
  open_html = FALSE
)

# Batch refresh multiple projects
project_ids <- c(1, 2, 3)
lapply(project_ids, function(pid) {
  refresh_analysis_report(con, pid, render_html = TRUE)
})

# Silent refresh (no console output)
refresh_analysis_report(con, project_id, verbose = FALSE)

# Use in a monitoring loop
while (analysis_running) {
  Sys.sleep(300)  # Wait 5 minutes
  refresh_analysis_report(con, project_id, render_html = TRUE)
}
}

}
\seealso{
\code{\link{create_analysis_report}} for creating new reports,
\code{\link{update_analysis_report}} for programmatic updates,
\code{\link{get_database_summary}} for raw database statistics
}
