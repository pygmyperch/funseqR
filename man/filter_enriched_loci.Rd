% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/go_workflow.R
\name{filter_enriched_loci}
\alias{filter_enriched_loci}
\title{Filter locus information for significantly enriched terms}
\usage{
filter_enriched_loci(
  ora_results,
  significance_threshold = 0.05,
  annotation_types = "all",
  dataset_type = "both",
  return_summary = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{ora_results}{List. Results from run_ORA() function}

\item{significance_threshold}{Numeric. FDR threshold for significance. Default is 0.05}

\item{annotation_types}{Character vector. Which annotation types to consider: "GO", "KEGG", "Pfam", "InterPro", "eggNOG", or "all". Default is "all"}

\item{dataset_type}{Character. Filter by dataset type: "candidate", "background", or "both". Default is "both"}

\item{return_summary}{Logical. Include summary statistics. Default is TRUE}

\item{verbose}{Logical. Print progress information. Default is TRUE}
}
\value{
List containing:
\itemize{
\item enriched_loci: Data frame of loci associated with enriched terms
\item enriched_terms: List of significantly enriched terms by annotation type
\item summary: Summary statistics (if return_summary = TRUE)
}
}
\description{
Extracts loci that are associated with significantly enriched functional terms
from ORA (Over-Representation Analysis) results.
}
\details{
This function processes ORA results to identify which genomic loci are
associated with significantly enriched functional terms. It works across
all annotation types and provides flexible filtering options.

The function:
\enumerate{
\item Extracts significantly enriched terms from each annotation type
\item Maps these terms back to their associated genes/proteins
\item Filters the locus_info table to include only enriched loci
\item Provides summary statistics and enriched term lists
}
}
\examples{
\dontrun{
# Run ORA analysis
ora_results <- run_ORA(con, "candidates.vcf", annotation_type = "both")

# Get all enriched loci
enriched <- filter_enriched_loci(ora_results)
head(enriched$enriched_loci)

# Get only GO-enriched candidate loci
go_candidates <- filter_enriched_loci(
  ora_results, 
  annotation_types = "GO",
  dataset_type = "candidate",
  significance_threshold = 0.1
)

# View summary
print(enriched$summary)
}

}
