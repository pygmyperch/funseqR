% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_blast.R
\name{perform_blast_db}
\alias{perform_blast_db}
\title{Perform BLAST search on sequences from the database}
\usage{
perform_blast_db(
  con,
  vcf_file_id,
  db_path,
  db_name,
  blast_type = c("blastn", "blastx", "diamond_blastn", "diamond_blastx"),
  e_value = 1e-05,
  max_hits = 5,
  threads = 1,
  output_dir = getwd(),
  taxids = NULL,
  extract_db_metadata = TRUE,
  seq_type = "raw",
  verbose = TRUE
)
}
\arguments{
\item{con}{A database connection object.}

\item{vcf_file_id}{The ID of the input file containing the VCF data.}

\item{db_path}{Character string specifying the path to the BLAST database.}

\item{db_name}{Character string specifying the name of the BLAST database.}

\item{blast_type}{Character string specifying the type of BLAST search.
Must be either "blastn", "blastx", "diamond_blastn", or "diamond_blastx".}

\item{e_value}{Numeric value specifying the E-value threshold for hits.
Default is 1e-5.}

\item{max_hits}{Integer specifying the maximum number of hits to return
per query. Default is 5.}

\item{threads}{Integer specifying the number of CPU threads to use.
Default is 1.}

\item{output_dir}{Character string specifying the directory for output files.
Default is the current working directory.}

\item{taxids}{Optional. Character string specifying NCBI taxonomy IDs to limit the search.
Default is NULL.}

\item{extract_db_metadata}{Logical. If TRUE, extract and store database metadata.
Default is TRUE.}

\item{seq_type}{Type of sequence to search: "raw", "orf_nuc", or "orf_aa". Default is "raw".}

\item{verbose}{Logical. If TRUE, print progress information. Default is TRUE.}
}
\value{
A list containing:
\item{blast_param_id}{The ID of the registered BLAST parameters.}
\item{result_count}{The number of BLAST results imported.}
\item{output_base}{The base name for output files.}
\item{metadata_id}{The ID of the stored database metadata (if extracted).}
\item{db_metadata}{The extracted database metadata (if extracted).}
}
\description{
This function retrieves flanking sequences from the database, performs a BLAST search,
stores the results back in the database, and captures database metadata for reproducibility.
}
