% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusterprofiler_enrichment.R
\name{run_clusterprofiler_enrichment}
\alias{run_clusterprofiler_enrichment}
\title{clusterProfiler Integration for GO Enrichment Analysis}
\usage{
run_clusterprofiler_enrichment(
  con,
  candidate_file_id,
  background_file_id,
  blast_param_id,
  ontologies = c("BP", "MF", "CC"),
  pvalue_cutoff = 0.05,
  padjust_method = "BH",
  min_gs_size = 5,
  max_gs_size = 500,
  verbose = TRUE
)
}
\arguments{
\item{con}{Database connection object}

\item{candidate_file_id}{Integer. File ID of candidate dataset (e.g., adaptive loci)}

\item{background_file_id}{Integer. File ID of background dataset (e.g., all sequenced loci)}

\item{blast_param_id}{Integer. BLAST parameter ID to use for annotations}

\item{ontologies}{Character vector. GO ontologies to test: c("BP", "MF", "CC"). Default is c("BP", "MF", "CC")}

\item{pvalue_cutoff}{Numeric. P-value cutoff for significance. Default is 0.05}

\item{padjust_method}{Character. P-value adjustment method. Default is "BH" (Benjamini-Hochberg)}

\item{min_gs_size}{Integer. Minimum gene set size for testing. Default is 5}

\item{max_gs_size}{Integer. Maximum gene set size for testing. Default is 500}

\item{verbose}{Logical. Print progress information. Default is TRUE}
}
\value{
List containing clusterProfiler enrichResult objects for each ontology
}
\description{
Functions to integrate clusterProfiler's robust enrichment analysis with funseqR workflows
Run GO enrichment analysis using clusterProfiler
}
\details{
This function integrates clusterProfiler's robust enrichment analysis with the funseqR workflow.
It uses the hypergeometric test (same as the original funseqR implementation) but leverages
clusterProfiler's well-tested statistical framework and enhanced visualization capabilities.

The function:
\enumerate{
\item Links candidate loci to background annotations by genomic position
\item Extracts UniProt accessions for candidate and background gene sets
\item Prepares GO term annotations in clusterProfiler format
\item Runs enrichment analysis using clusterProfiler's enricher() function
\item Returns results with built-in visualization and summary capabilities
}
}
\examples{
\dontrun{
# After completing funseqR workflow (VCF import, BLAST, annotation):
enrichment_results <- run_clusterprofiler_enrichment(
  con = con,
  candidate_file_id = vcf_cand_import$file_id,
  background_file_id = vcf_import$file_id,
  blast_param_id = blast_results$blast_param_id,
  ontologies = c("BP", "MF", "CC"),
  pvalue_cutoff = 0.1  # More lenient threshold
)

# View results
summary(enrichment_results$BP)
head(enrichment_results$BP@result)

# Create visualizations
dotplot(enrichment_results$BP)
barplot(enrichment_results$BP)
}

}
